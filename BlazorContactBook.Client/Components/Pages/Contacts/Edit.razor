@page "/contacts/edit/{id:int}"
@using BlazorContactBook.Client.Components.UI.Contacts
@using BlazorContactBook.Client.Helpers

@attribute [Authorize]

@rendermode InteractiveServer

@inject IContactDTOService ContactService
@inject NavigationManager Nav

@if (contact is not null)
{

    <PageTitle>ContactBook | Edit Contact</PageTitle>

    <div class="p-3 my-5 border border-2 shadow-lg bg-light">

        <ContactForm Contact="contact" OnSubmit="HandleSubmit" />

    </div>

}




@code {

    #region parameters

    [Parameter]
    public int Id { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState>? AuthStateTask { get; set; }

    #endregion

    #region state

    private UserInfo? userInfo;

    private ContactDTO? contact { get; set; }

    #endregion

    #region methods

    protected override async Task OnInitializedAsync()
    {
        try
        {
            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);

            contact = await ContactService.GetContactByIdAsync(Id, userInfo!.UserId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw;
        }

        if (contact is null)
        {
            Nav.NavigateTo("/contacts");
        }
    }


    private async Task HandleSubmit(ContactDTO contact)
    {
        if (userInfo is not null)
        {
            await ContactService.UpdateContactAsync(contact, userInfo!.UserId);

            Nav.NavigateTo("contacts");
        }

    }

    #endregion

}
